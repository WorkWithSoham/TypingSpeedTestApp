{"version":3,"sources":["components/Speed.tsx","components/MainGame.tsx","App.tsx","index.tsx"],"names":["Speed","className","this","props","speed","correctCount","finalTime","React","Component","initialState","typeTest","words","enteredWord","enteredText","started","startTime","MainGame","state","showSpeedTime","startClicked","DomManipulation","resetClicked","setState","componentDidMount","checkFinished","length","currentTime","Date","getTime","computeSpeed","Math","round","charsTyped","millis","floor","onInputType","e","currentTarget","value","trim","replace","slice","getQuote","then","quote","toLowerCase","split","speedRender","id","style","color","onChange","name","placeholder","disabled","onClick","a","fetch","response","json","data","content","dis","QuoteBox","document","getElementById","inputCol","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0d4128e7.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { BaseState } from \"../StateInterface\"\r\n\r\n\r\nexport default class Speed extends React.Component<BaseState> {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"col-md-6 mx-auto offset-md-5 mt-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 mx-auto\">\r\n                        <h3>{this.props.speed ? this.props.speed : 0}</h3><p>wpm</p>\r\n                    </div>\r\n                    <div className=\"col-md-4 mx-auto\">\r\n                        <h3>{this.props.correctCount}</h3><p>Correct Words</p>\r\n                    </div>\r\n                    <div className=\"col-md-4 mx-auto\">\r\n                        <h3>{ this.props.finalTime }</h3><p>Time in seconds</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Speed from \"./Speed\";\r\nimport { BaseState } from '../StateInterface';\r\n\r\nconst initialState: BaseState = {\r\n    typeTest: 'Click START to begin the test...',\r\n    words: [],\r\n    enteredWord: '',\r\n    enteredText: '',\r\n    correctCount: 0,\r\n    started: false,\r\n    startTime: null,\r\n    speed: null,\r\n    finalTime: 0\r\n}\r\n\r\nexport class MainGame extends React.Component {\r\n\r\n    state: BaseState = initialState\r\n    showSpeedTime: boolean = false\r\n\r\n    componentDidMount() {\r\n        getQuote().then((quote: string) => {\r\n            quote = quote.toLowerCase().replace(/[.,#!$%^&*;:{}=\\-_`~()]/g, \"\")\r\n            this.setState({ typeTest: quote })\r\n            this.setState({ words: quote.split(' ') })\r\n        });\r\n        DomManipulation('graytext', true);\r\n    }\r\n\r\n    startClicked = () => {\r\n        DomManipulation('cornflowerblue', false);\r\n    }\r\n\r\n    resetClicked = () => {\r\n        this.showSpeedTime = false;\r\n        this.setState(initialState);\r\n        this.componentDidMount();\r\n        DomManipulation('graytext', true);\r\n    }\r\n\r\n    checkFinished = () => {\r\n        if (this.state.words.length === 0) {\r\n\r\n            const currentTime = new Date()\r\n            const startTime = this.state.startTime ? this.state.startTime.getTime() : 0\r\n\r\n            const finalTime = (currentTime.getTime() - startTime) / 1000\r\n            const speed = this.computeSpeed(this.state.enteredText.length, finalTime)\r\n\r\n            this.setState({ finalTime: Math.round(finalTime), speed })\r\n\r\n            this.showSpeedTime = true;\r\n        }\r\n    }\r\n\r\n    computeSpeed = (charsTyped: number, millis: number): number =>\r\n        Math.floor((charsTyped / 5) / (millis / 60))\r\n\r\n    onInputType = (e: React.ChangeEvent<HTMLTextAreaElement>): void => {\r\n        if (!this.state.started) {\r\n            this.setState({ started: true, startTime: new Date() })\r\n        }\r\n\r\n        const enteredWord = e.currentTarget.value.trim()\r\n        this.setState({ enteredWord })\r\n\r\n        if (enteredWord === this.state.words[0]) {\r\n            this.setState({ correctCount: this.state.correctCount + 1 })\r\n            this.setState({ enteredWord: '' })\r\n            this.setState({ typeTest: this.state.typeTest.replace(enteredWord, '') })\r\n            this.setState({ words: this.state.words.slice(1) }, (): void => this.checkFinished())\r\n\r\n            this.setState({ enteredText: this.state.enteredText + e.currentTarget.value + \" \" })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const speedRender = this.showSpeedTime ? <Speed {...this.state} /> : null\r\n\r\n        return (\r\n            <div className=\"container-sm\">\r\n                <div className=\"col-md-8 offset-md-2 p-5 border rounded\">\r\n                    <h3 id='QuoteBox'>\r\n                        <span style={{ color: '#12A630' }}>{this.state.enteredText}</span>\r\n                        <span>{this.state.typeTest}</span>\r\n                    </h3>\r\n                </div>\r\n                {speedRender}\r\n                <div className=\"col-md-6 pt-2 offset-md-3 pb-5\">\r\n                    <textarea\r\n                        value={this.state.enteredWord}\r\n                        onChange={this.onInputType}\r\n                        className=\"form-control\"\r\n                        name=\"inputCol\"\r\n                        id=\"inputCol\"\r\n                        placeholder=\"Click Start to begin writing here...\" disabled ></textarea>\r\n                    {\r\n                        this.state.started &&\r\n                        <button className=\"btn btn-danger m-2 mx-auto\" onClick={this.resetClicked}>\r\n                            Reset\r\n                        </button>\r\n                    }\r\n                    {\r\n                        !this.state.started &&\r\n                        <button className=\"btn btn-success m-2 mx-auto\" onClick={this.startClicked}>\r\n                            Start\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nasync function getQuote(): Promise<string> {\r\n    const response = await fetch('https://api.quotable.io/random?minLength=150&maxLength=250')\r\n    const data = await response.json()\r\n\r\n    return data.content\r\n}\r\n\r\nconst DomManipulation = (color: string, dis: boolean): void => {\r\n\r\n    let QuoteBox = document.getElementById(\"QuoteBox\") as HTMLElement\r\n    let inputCol = document.getElementById(\"inputCol\") as HTMLTextAreaElement\r\n\r\n    QuoteBox.style.color = color\r\n    inputCol.disabled = dis\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { MainGame } from './components/MainGame';\r\nimport './App.css'\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"background\">\r\n      <div>\r\n        <div className=\"text-center pt-2\">\r\n          <h1>Typing Jockey</h1>\r\n        </div>\r\n        <MainGame />\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}